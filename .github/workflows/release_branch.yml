name: Create Release

on:
  workflow_dispatch:

jobs:
  lint_and_test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        job: [ lint, test ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run Linter
        if: matrix.job == 'lint'
        run: npm run lint

      - name: Run Tests
        if: matrix.job == 'test'
        run: npm run test

  create_release_branch:
    runs-on: ubuntu-latest
    needs: lint_and_test
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Release Branch
        run: |
          release_branch="releases/${{ github.run_number }}"
          git checkout -b $release_branch
          git push origin $release_branch
          echo "Created release branch $release_branch"

  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: create_release_branch
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Yandex Cloud CLI
        run: |
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo 'source /home/runner/.bashrc' >> $GITHUB_ENV

      - name: Authenticate with Yandex Cloud
        env:
          YC_CLOUD_ID: ${{ secrets.CLOUD_ID }}
          YC_FOLDER_ID: ${{ secrets.FOLDER_ID }}
          YC_SERVICE_ACCOUNT_KEY: ${{ secrets.OATH_TOKEN }}
        run: |
          echo "${{ secrets.YC_SERVICE_ACCOUNT_KEY }}" > /tmp/key.json
          yc init --cloud-id $YC_CLOUD_ID --folder-id $YC_FOLDER_ID --service-account-key /tmp/key.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Yandex Container Registry
        run: |
            export YC_TOKEN=$(yc iam create-token)
            echo $YC_TOKEN | docker login -u oauth --password-stdin cr.yandex

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t cr.yandex/crpdsdp801a02j35cfv6/node-docker-dev:${{ github.run_number }} \
            -t cr.yandex/crpdsdp801a02j35cfv6/node-docker-dev:${{ github.run_number }}_latest \
            --push \
            .

  create_git_tag:
    runs-on: ubuntu-latest
    needs: create_release_branch
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Git Tag
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag -a v${{ github.run_number }} -m "Release version ${{ github.run_number }}"
          git push origin v${{ github.run_number }}