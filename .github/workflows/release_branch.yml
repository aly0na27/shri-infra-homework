name: Create Release

on:
  workflow_dispatch:

jobs:
  lint_and_test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        job: [ lint, test ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run Linter
        if: matrix.job == 'lint'
        run: npm run lint

      - name: Run Tests
        if: matrix.job == 'test'
        run: npm run test

  create_release_branch:
    runs-on: ubuntu-latest
    needs: lint_and_test
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Release Branch
        run: |
          release_branch="releases/${{ github.run_number }}"
          git checkout -b $release_branch
          git push origin $release_branch
          echo "Created release branch $release_branch"

  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: create_release_branch
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: release/${{github.run_number}}

      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}


      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: my-first-registry
          CR_REPOSITORY: node-docker-dev
          IMAGE_TAG: hehehehe
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG



      - name: Create Docker image current
        run: |
          docker image build -t cr.yandex/crpdsdp801a02j35cfv6/app:${{ github.run_number }}_latest .
          docker push cr.yandex/crpdsdp801a02j35cfv6/app:${{ github.run_number }}_latest

  create_git_tag:
    runs-on: ubuntu-latest
    needs: create_release_branch
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Git Tag
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag -a v${{ github.run_number }} -m "Release version ${{ github.run_number }}"
          git push origin v${{ github.run_number }}